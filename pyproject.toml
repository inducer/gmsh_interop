[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gmsh_interop"
version = "2024.2"
description = "A parser for GMSH's .msh format"
readme = "README.rst"
license = "MIT"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
dependencies = [
    "numpy>=1.6.0",
    "pytools>=2022.1.14",
    "packaging>=20.0",
]

[project.optional-dependencies]
doc = [
    "furo",
    "sphinx>=4",
    "sphinx-copybutton",
]
test = [
    "pytest",
    "ruff",
]

[project.urls]
Documentation = "https://documen.tician.de/gmsh_interop"
Homepage = "https://github.com/inducer/gmsh_interop"

[tool.ruff]
preview = true

[tool.ruff.lint]
extend-select = [
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "E",    # pycodestyle
    "F",    # pyflakes
    "G",    # flake8-logging-format
    "I",    # flake8-isort
    "N",    # pep8-naming
    "Q",    # flake8-quotes
    "RUF",  # ruff
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E226", # missing whitespace around arithmetic operator
    "E241", # multiple spaces after comma
    "E242", # tab after comma
    "E402", # module level import not at the top of file
    "UP031", # use f-strings instead of %
    "UP032", # use f-strings instead of .format
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
docstring-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["pytools"]
known-local-folder = ["gmsh_interop"]
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.basedpyright]
pythonVersion = "3.10"
pythonPlatform = "All"

reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportAny = "none"

exclude = [ "doc", ".env", ".conda-root" ]
